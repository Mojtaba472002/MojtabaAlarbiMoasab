// Toggle Password Visibility
function togglePassword(inputId, iconElement) {
    const input = document.getElementById(inputId);
    if (input.type === "password") {
        input.type = "text";
        iconElement.textContent = "๐";
        iconElement.title = "ุฅุฎูุงุก ูููุฉ ุงููุฑูุฑ";
    } else {
        input.type = "password";
        iconElement.textContent = "๐๏ธ";
        iconElement.title = "ุนุฑุถ ูููุฉ ุงููุฑูุฑ";
    }
}

// DOM Ready
document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("#signup-form");
    if (form) {
        form.addEventListener("submit", validateSignUpForm);
    }
});

function validateSignUpForm(e) {
    e.preventDefault();

    const username = document.getElementById('username').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();
    const confirmPassword = document.getElementById('confirm-password').value.trim();
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    // Check for empty fields
    if (!username || !email || !password || !confirmPassword) {
        Swal.fire({
            icon: 'warning',
            title: 'ุชูุจูู',
            text: 'ูุฑุฌู ุชุนุจุฆุฉ ุฌููุน ุงูุญููู.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    // Username rule: max one space not at start or end
    if (/^\s|\s$/.test(username) || (username.split(" ").length - 1) > 1) {
        Swal.fire({
            icon: 'error',
            title: 'ุงุณู ุงููุณุชุฎุฏู ุบูุฑ ุตุงูุญ',
            text: 'ุงุณู ุงููุณุชุฎุฏู ูููู ุฃู ูุญุชูู ุนูู ูุณุงูุฉ ูุงุญุฏุฉ ููุทุ ููุฌุจ ุฃูุง ุชููู ูู ุงูุจุฏุงูุฉ ุฃู ุงูููุงูุฉ.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    // Email validation
    if (!emailPattern.test(email)) {
        Swal.fire({
            icon: 'error',
            title: 'ุจุฑูุฏ ุฅููุชุฑููู ุบูุฑ ุตุงูุญ',
            text: 'ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    // Password checks
    if (password.length <= 5) {
        Swal.fire({
            icon: 'error',
            title: 'ูููุฉ ุงููุฑูุฑ ูุตูุฑุฉ',
            text: 'ูุฌุจ ุฃู ุชุญุชูู ูููุฉ ุงููุฑูุฑ ุนูู ุฃูุซุฑ ูู 5 ุฃุญุฑู.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    if (/\s/.test(password)) {
        Swal.fire({
            icon: 'error',
            title: 'ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุงูุญุฉ',
            text: 'ูุง ููุณูุญ ุจุงููุณุงูุงุช ูู ูููุฉ ุงููุฑูุฑ.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    // Password match
    if (password !== confirmPassword) {
        Swal.fire({
            icon: 'error',
            title: 'ูููุงุช ุงููุฑูุฑ ุบูุฑ ูุชุทุงุจูุฉ',
            text: 'ูููุฉ ุงููุฑูุฑ ูุชุฃููุฏ ูููุฉ ุงููุฑูุฑ ุบูุฑ ูุชุทุงุจููู.',
            confirmButtonText: 'ุญุณููุง'
        });
        return false;
    }

    localStorage.setItem("username", username); 
    // Success โ Redirect
   window.location.href = "ChooseRole_Page.html";
    return false;
}
